-- Injects reflection information in the byte code
MODULE {TrfInjectRefl} {injectReflSwf} {}

INCLUDE "ByteCodeAst.ag"

imports
{
import Data.ByteString.Lazy(ByteString,pack)
import ByteCode
import Data.Word
import qualified Data.Set as Set
import Data.Set(Set)
import qualified Data.Map as Map
import Data.Map(Map)
import Codec.Binary.UTF8.String
import ProgInfo
}

INCLUDE "DistSymbolTables.ag"
INCLUDE "CommonImports.ag"


WRAPPER SwfFile

{
injectReflSwf :: [SymbolTables] -> SwfFile -> SwfFile
injectReflSwf tbls m = out where
  inh = Inh_SwfFile { tbls_Inh_SwfFile = tbls }
  sem = sem_SwfFile m
  syn = wrap_SwfFile sem inh
  out = output_Syn_SwfFile syn
}


--
-- Transformation of the code
--

ATTR AllSwf [ | | output : SELF ]

