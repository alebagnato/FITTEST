#######################################################################################
#############################FRUIT Monkey Configuration File###########################
#######################################################################################

### Visual Settings Dialog ###
ShowVisualSettingsDialogOnStartup = true

### Verbosity of the monkey
LogLevel = 1


### Monkey mode. Possible values: 'Generate', 'GenerateDebug', 'Spy', 'Replay', 'ReplayDebug', 'View'
Mode = Generate


### The path to the executable of the system under test
Executable = C:/Program Files (x86)/Mozilla Firefox/firefox.exe http://ec2-54-216-123-12.eu-west-1.compute.amazonaws.com/workgroup/public/login/login
#Executable = C:/Windows/System32/calc.exe
#Executable = C:/Program Files/CTE XL 3.1.3 Professional/cte.exe
#Executable = C:/Program Files (x86)/Microsoft Office/Office14/winword.exe
#Executable = C:/Program Files (x86)/Pidgin/pidgin.exe
#Executable = C:/Users/Tanja Vos/Desktop/modelio/modelio.exe
#Executable = C:/Program Files (x86)/Internet Explorer/iexplore.exe
#Executable = C:/Program Files/Java/jre6/bin/java.exe -jar "C:/Users/Tanja Vos/Desktop/fruit/suts/swtcalc/target/calc.jar"
#Executable = C:/Program Files (x86)/Contacom/ClaveCon.exe

### The time the monkey will wait after having executed an action. This might be necessary to give the system under test
### enough time to react after an action. Rule of thumb: The higher this value, the more likely it is that a recorded sequence
### can be replayed properly
TimeToWaitAfterAction = 0.1


### This advices the monkey to slow down or speed up the execution of certain actions. For example: one might want to replay a sequence slower or
### faster than it was recorded, in order to see what is going on. However, this value is only an advice and it's effect depends
### on the type of executed actions.
ActionDuration = .4


### Time in seconds that the monkey waits until the system under test has finished loading.
StartupTime = 3


### This causes the monkey to save a recorded sequence to the output directory only in the case if it is erraneous.
### Setting this variable to 'false' will cause the monkey to dump each generated sequence into the output directory.
OnlySaveFaultySequences = true


### this is the directory into which the monkey dumps log files, faulty sequences and state snapshots
OutputDir = ./output


### This is the directory that the monkey uses for temporary files
TempDir = ./temp


### Path to the sequence to be replayed during Replay mode.
PathToReplaySequence = ./temp/tmpsequence


### A semicolon separated list of files and directories to be deleted before the system gets started
#Delete = C:/Users/Tanja Vos/CTE XL/.metadata


### A semicolon separated list of files and directories to be copied to a destination before the system gets started
### The list is treated as a list of pairs: two consecutive entries refer to source and target, respectively.
#CopyFromTo = ./resources/.metadata;C:/Users/Tanja Vos/CTE XL;\
#             ./resources/default.cte;C:/Users/Tanja Vos



### If set to true, it will force the system under test into the foreground if it is not the currently active application
ForceForeground = true


### This value refers to the severity of a state's verdict. If the verdict has a severity >= the threshold, it is considered a faulty state
### and thus the sequence shall be saved for later inspection
FaultThreshold = 0.01


### Time in seconds after which the monkey ceases to generate new sequences, default: one year
MaxTime = 31536000.0


### Maximum amount of sequences to generate. After it has been reached, the monkey ceases work.
Sequences = 3


### Maximum amount of actions per sequence.
SequenceLength = 30


###The maximum amount of time the monkey tries to replay an action during replay mode. If it is unable to replay the action after the
### given amount of time, replay will fail.
ReplayRetryTime = 30.0


### Here you can setup a crude oracle (if any widget on the screen has a Title property that matches the regex, the oracle will report a failure)
#SuspiciousTitles = (.*NullPointer.*)|(.*[Pp]roblem [Oo]ccurred.*)|.*[pP]roblem.*|.*[Ee]rror.*

### Here you can list names of processes which should be killed during the test (e.g. an annoying help document popping up during the test etc.) ###
### This is a regular expression which is applied to each process' name
#ProcessesToKillDuringTest = helppane.exe|CLVIEW.EXE|firefox.exe|AcroRd32.exe

###Here you can enter a regular expression to exclude clicks to 'problematic' widgets (the regex will be applied to the Title property of the widgets)
#ClickFilter = Exit|(.*Import.*)|Close|(Print.*)|(Open\\.\\.\\..*)|(Save.*)|(.*Cerrar.*)|Browse|Help Contents|Help.*|New [Pp]roject.*|\\.\\.\\..*|Export [pP]#roject.*|Add [Ff]ile.*


###this is the classpath for your custom classes (Oracle, ActionBuilder, SystemBuilder, StateBuilder, ...)
MyClassPath = .


### The protocol class which defines the entire behaviour of the monkey. Either use the Default Protocol or write a custom one.
ProtocolClass = org.fruit.monkey.DefaultProtocol

TimeToFreeze = 12.0


### Other variables
ExecuteActions = true
VisualizeSelectedAction = true
DrawWidgetUnderCursor = true
DrawWidgetInfo = false
VisualizeActions = false
UseRecordedActionDurationAndWaitTimeDuringReplay = false
StopGenerationOnFault = true
ShowSettingsAfterTest = true