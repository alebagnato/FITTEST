//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.02.10 at 12:51:31 PM CET 
//


package eu.fittest.project.config;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the eu.fittest.project.config package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: eu.fittest.project.config
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ModelInferenceType }
     * 
     */
    public ModelInferenceType createModelInferenceType() {
        return new ModelInferenceType();
    }

    /**
     * Create an instance of {@link LogTargetType }
     * 
     */
    public LogTargetType createLogTargetType() {
        return new LogTargetType();
    }

    /**
     * Create an instance of {@link GAParameterType }
     * 
     */
    public GAParameterType createGAParameterType() {
        return new GAParameterType();
    }

    /**
     * Create an instance of {@link GeneralType }
     * 
     */
    public GeneralType createGeneralType() {
        return new GeneralType();
    }

    /**
     * Create an instance of {@link TestProject }
     * 
     */
    public TestProject createTestProject() {
        return new TestProject();
    }

    /**
     * Create an instance of {@link OracleType }
     * 
     */
    public OracleType createOracleType() {
        return new OracleType();
    }

    /**
     * Create an instance of {@link LoggingType }
     * 
     */
    public LoggingType createLoggingType() {
        return new LoggingType();
    }

    /**
     * Create an instance of {@link InstrumentationType }
     * 
     */
    public InstrumentationType createInstrumentationType() {
        return new InstrumentationType();
    }

    /**
     * Create an instance of {@link TestGenerationType }
     * 
     */
    public TestGenerationType createTestGenerationType() {
        return new TestGenerationType();
    }

}
