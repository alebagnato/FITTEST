package ${packageName}; ## eu.fittest.efsm2ct.sut

/*

	Automatically generated by Velocity using template vm/sut-driver.vm
	Tool version ${tool}

*/

import eu.fittest.fbk.efsm2ct.flexdrv.FlexDriverException;
import eu.fittest.fbk.efsm2ct.flexdrv.FlexDriver;
import eu.fittest.fbk.efsm2ct.flexdrv.StateDescription;
import eu.fittest.fbk.efsm2ct.flexdrv.logging.LoggerManager;

public class ${model.sutName} {

    protected FlexDriver flexDriver;
	protected StateDescription sd;
	protected boolean firstTime = true;

	public ${model.sutName}() {
	    System.setProperty(FlexDriver.SELENIUMHOST_PROPERTY, "192.168.56.101");
		LoggerManager.initialize();
        flexDriver = new FlexDriver();
    }

	public void shutdown() {

		try {
			Thread.sleep(1000);
		} catch (Exception ex) {
			ex.printStackTrace();
		}

		flexDriver.dismissApplication();
		flexDriver.stopDaemons();

		try {
			Thread.sleep(1000);
		} catch (Exception ex) {
			ex.printStackTrace();
		}

	}

	public void startup() throws Exception {

		if (firstTime) {
			flexDriver.startSelenium();
			firstTime = false;
		}

		flexDriver.startupDaemons();
		flexDriver.startApplication();
	}
    

## generate inspectors

##   EXAMPLE:
##    public int numInShopCart() {
##        return sd.getAsInt("numInShopCart");
##    }
    
    #foreach( ${i} in ${model.inspectors} )
    
    public ${i.type} ${i.name}() { ## TODO type is hard-coded
    
          return sd.getAsInt("${i.name}");
    }
    
    #end
    
    
## generate mutators
  
##    public void compare13_click() throws FlexDriverException {
##        sd = flexDriver.invoke("compare13","click");
##   }
    
    #foreach( ${m} in ${model.mutators} )
    
    public void ${m.name}(${m.getFormalArgs()}) throws FlexDriverException {
    
         sd = flexDriver.invoke("${m.targetObject}","${m.event}" ${m.getActualArgsWithToString()});
         
    }
	
    #end
    
}