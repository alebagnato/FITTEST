-- diff

--
-- Build a block-based CFG. That is, the nodes in the CFG are
-- block ids. This provides a top-level API. The main work is 
-- done by XCFGaspect.ag, which defines the needed attributes
-- and how they are calculated.

MODULE {Options.XCFG} {exportCFG,exportCFG_inByteString,cfgShow,cfgShow_inByteString,cfg2dot,cfg2dot_inByteString} {}

INCLUDE "XCFGaspect.ag"
INCLUDE "ByteCode/Ast.ag"
INCLUDE "ByteCode/BranchInfo.ag"
INCLUDE "Distribute/Context.ag"
INCLUDE "Distribute/SymbolTables.ag"
--INCLUDE "SymViewAst.ag"
--INCLUDE "ByteCodeLocationInfo.ag"
--INCLUDE "DistStackInfo.ag"
--INCLUDE "NumberAstNodes.ag"

imports
{
import Codec.Binary.UTF8.String
import Data.ByteString.Lazy(ByteString,unpack,pack)
import ByteCode.ByteCode
import Options.Options 
}

WRAPPER SwfFile
WRAPPER AbcFile

{
cfgShow :: Options -> [SymbolTables] -> SwfFile -> String
cfgShow opts tbls swf = snd (exportCFG opts tbls swf)

cfgShow_inByteString opts tbls swf = snd (exportCFG_inByteString opts tbls swf)

cfg2dot :: Options -> [SymbolTables] -> SwfFile -> String
cfg2dot opts tbls swf = fst (exportCFG opts tbls swf)

cfg2dot_inByteString opts tbls swf = fst (exportCFG_inByteString opts tbls swf)

--
-- Exporting a pair of (sdot,splain) where sdot is in the Dot format,
-- and splain is just a plain show of the CFGs
--
exportCFG :: Options -> [SymbolTables] -> SwfFile -> (String,String)
exportCFG opts tbls swf = (show . ppXCFGs $ out, show out) 
  where
  inh = Inh_SwfFile { opts_Inh_SwfFile = opts
      		    , tbls_Inh_SwfFile = tbls }
  semf = sem_SwfFile swf
  syn  = wrap_SwfFile semf inh
  out  = xcfgs_Syn_SwfFile syn
  
exportCFG_inByteString  :: Options -> [SymbolTables] -> SwfFile -> (ByteString,ByteString)
exportCFG_inByteString opts tbls swf = (pack . encode $ sdot, pack . encode $ splain)
   where
   (sdot,splain) = exportCFG opts tbls swf
   
}

