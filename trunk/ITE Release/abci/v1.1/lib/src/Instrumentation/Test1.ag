--
-- Alexander's example instrumentation
--

MODULE {Instrumentation.Test1} {demoSwf} {}

INCLUDE "ByteCode/Trf/Base.ag"

WRAPPER SwfFile

{
import Data.Maybe
}

{
demoSwf :: Options -> [SymbolTables] -> SwfFile -> SwfFile
demoSwf opts tbls m = out where
  inh = Inh_SwfFile { opts_Inh_SwfFile = opts, tbls_Inh_SwfFile = tbls }
  sem = sem_SwfFile m
  syn = wrap_SwfFile sem inh
  out = output_Syn_SwfFile syn
}

ATTR InstructionsLike InstructionLike [ isEvnHdl:Bool | | ]
SEM BodyInfo
  | Info
      loc.methodSig = lookupMethod (Ref @method) @lhs.tbls
      loc.sigParams = sigParams @loc.methodSig
      instructions.isEvnHdl = if (length @loc.sigParams == 1)
			      then let pt = spType $ head  @loc.sigParams
				       qn = toQName @lhs.tbls pt
				       res = case qNs qn of
						QNsCustom nm -> (showByteStr nm) == "flash.events"
						_ -> False
				   in	res
			      else False

-- SEM Instruction | *
--   inst.inj1 : InjRoot
--   inst.inj1 = @loc.runInject $ do
-- 			    debug ("Test atribute EvnHdl Name: " ++ show @lhs.isEvnHdl)

SEM Instruction | Virtual
  inst.mquery : QueryMethod
  inst.mquery = QueryMethod_Current

  inst.inj1 : InjHereAppend
  inst.inj1 = InjHereAppend_Inj
  inj1.code = when (@kind.self == VirtKind_BeginBody && @lhs.isEvnHdl) $ do
		  str <- declString ("test!!!")
		  l <- freshLabel
		  callTrace str
		  label l
