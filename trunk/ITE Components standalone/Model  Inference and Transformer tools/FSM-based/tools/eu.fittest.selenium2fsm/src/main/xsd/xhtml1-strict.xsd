<?xml version="1.0" encoding="UTF-8"?>
<xs:schema version="1.0" xml:lang="en"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.w3.org/1999/xhtml"
	xmlns="http://www.w3.org/1999/xhtml" xmlns:xml="http://www.w3.org/XML/1998/namespace"
	elementFormDefault="qualified">

	<xs:annotation>
		<xs:documentation>
			XHTML 1.0 (Second Edition) Strict in XML Schema

			Modified to faster accept Selenium test cases.
			
		</xs:documentation>
	</xs:annotation>

	<xs:import namespace="http://www.w3.org/XML/1998/namespace"
		schemaLocation="http://www.w3.org/2001/xml.xsd" />

	<xs:annotation>
		<xs:documentation>
			================== Imported Names
			====================================
		</xs:documentation>
	</xs:annotation>

	<xs:simpleType name="ContentType">
		<xs:annotation>
			<xs:documentation>
				media type, as per [RFC2045]
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="ContentTypes">
		<xs:annotation>
			<xs:documentation>
				comma-separated list of media types, as per
				[RFC2045]
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="Charset">
		<xs:annotation>
			<xs:documentation>
				a character encoding, as per [RFC2045]
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="Charsets">
		<xs:annotation>
			<xs:documentation>
				a space separated list of character encodings, as
				per [RFC2045]
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<xs:simpleType name="LanguageCode">
		<xs:annotation>
			<xs:documentation>
				a language code, as per [RFC3066]
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:language" />
	</xs:simpleType>

	
	<xs:simpleType name="LinkTypes">
		<xs:annotation>
			<xs:documentation>
				space-separated list of link types
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:NMTOKENS" />
	</xs:simpleType>

	<xs:simpleType name="URI">
		<xs:annotation>
			<xs:documentation>
				a Uniform Resource Identifier, see [RFC2396]
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:anyURI" />
	</xs:simpleType>


	<xs:attributeGroup name="coreattrs">
		<xs:annotation>
			<xs:documentation>
				core attributes common to most elements
				id
				document-wide unique id
				class space separated list of classes
				style
				associated style info
				title advisory title/amplification
			</xs:documentation>
		</xs:annotation>
  </xs:attributeGroup>

  <xs:attributeGroup name="i18n">
    <xs:annotation>
      <xs:documentation>
      internationalization attributes
      lang        language code (backwards compatible)
      xml:lang    language code (as per XML 1.0 spec)
      dir         direction for weak/neutral text
      </xs:documentation>
    </xs:annotation>
    <!-- 
    <xs:attribute name="lang" type="LanguageCode"/>
    -->
    <xs:attribute ref="xml:lang"/>
  </xs:attributeGroup>

 

  <xs:attributeGroup name="attrs">
    <xs:attributeGroup ref="coreattrs"/>
    <xs:attributeGroup ref="i18n"/>
  </xs:attributeGroup>

  <xs:annotation>
    <xs:documentation>
    =================== Text Elements ====================================
    </xs:documentation>
  </xs:annotation>

   <xs:group name="block">
    <xs:choice>
     <!-- 
      <xs:element ref="p"/>
      <xs:group ref="heading"/>
      <xs:element ref="div"/>
      <xs:group ref="lists"/>
      <xs:group ref="blocktext"/>
      <xs:element ref="fieldset"/>
      -->
      <xs:element ref="table"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="Block">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="block"/>
      <!-- 
      <xs:element ref="form"/>
      <xs:group ref="misc"/>
      -->
    </xs:choice>
  </xs:complexType>

  <xs:annotation>
    <xs:documentation>
    ================ Document Structure ==================================
    </xs:documentation>
  </xs:annotation>

  <xs:element name="html">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="head"/>
        <xs:element ref="body"/>
      </xs:sequence>
      <xs:attributeGroup ref="i18n"/>
      <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>
  </xs:element>

  <xs:annotation>
    <xs:documentation>
    ================ Document Head =======================================
    </xs:documentation>
  </xs:annotation>

 
  <xs:element name="head">
    <xs:annotation>
      <xs:documentation>
      content model is "head.misc" combined with a single
      title and an optional base element in any order
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
     	<xs:sequence>
     		<xs:element ref="meta"/>
       		<xs:element ref="link"/>
           <xs:element ref="title"/>
     	</xs:sequence>
      <xs:attributeGroup ref="i18n"/>
      <xs:attribute name="id" type="xs:ID"/>
      <xs:attribute name="profile" type="URI"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="title">
    <xs:annotation>
      <xs:documentation>
      The title element is not considered part of the flow of text.
      It should be displayed, for example as the page header or
      window title. Exactly one title is required per document.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType mixed="true">
      <xs:attributeGroup ref="i18n"/>
      <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="base">
    <xs:annotation>
      <xs:documentation>
      document base URI
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attribute name="href" use="required" type="URI"/>
      <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="meta">
    <xs:annotation>
      <xs:documentation>
      generic metainformation
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="i18n"/>
      <xs:attribute name="id" type="xs:ID"/>
      <xs:attribute name="http-equiv"/>
      <xs:attribute name="name"/>
      <xs:attribute name="content" use="required"/>
      <xs:attribute name="scheme"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="link">
    <xs:annotation>
      <xs:documentation>
      Relationship values can be used in principle:

      a) for document specific toolbars/menus when used
         with the link element in document head e.g.
           start, contents, previous, next, index, end, help
      b) to link to a separate style sheet (rel="stylesheet")
      c) to make a link to a script (rel="script")
      d) by stylesheets to control how collections of
         html nodes are rendered into printed documents
      e) to make a link to a printable version of this document
         e.g. a PostScript or PDF version (rel="alternate" media="print")
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:attributeGroup ref="attrs"/>
      <xs:attribute name="charset" type="Charset"/>
      <xs:attribute name="href" type="URI"/>
      <xs:attribute name="hreflang" type="LanguageCode"/>
      <xs:attribute name="type" type="ContentType"/>
      <xs:attribute name="rel" type="LinkTypes"/>
      <xs:attribute name="rev" type="LinkTypes"/>
    </xs:complexType>
  </xs:element>




  <xs:annotation>
    <xs:documentation>
    =================== Document Body ====================================
    </xs:documentation>
  </xs:annotation>

  <xs:element name="body">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="Block">
        <!-- 
          <xs:attributeGroup ref="attrs"/>
          <xs:attribute name="onload" type="Script"/>
          <xs:attribute name="onunload" type="Script"/>
          -->
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>


  
  <xs:simpleType name="TRules">
    <xs:annotation>
      <xs:documentation>
      The rules attribute defines which rules to draw between cells:

      If rules is absent then assume:
          "none" if border is absent or border="0" otherwise "all"
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="none"/>
      <xs:enumeration value="groups"/>
      <xs:enumeration value="rows"/>
      <xs:enumeration value="cols"/>
      <xs:enumeration value="all"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:attributeGroup name="cellhalign">
    <xs:annotation>
      <xs:documentation>
      horizontal alignment attributes for cell contents

      char        alignment char, e.g. char=':'
      charoff     offset for alignment char
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="align">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="left"/>
          <xs:enumeration value="center"/>
          <xs:enumeration value="right"/>
          <xs:enumeration value="justify"/>
          <xs:enumeration value="char"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    
  </xs:attributeGroup>

  <xs:attributeGroup name="cellvalign">
    <xs:annotation>
      <xs:documentation>
      vertical alignment attributes for cell contents
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="valign">
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="top"/>
          <xs:enumeration value="middle"/>
          <xs:enumeration value="bottom"/>
          <xs:enumeration value="baseline"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:element name="table">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element maxOccurs="unbounded" ref="tbody"/>
          <xs:element maxOccurs="unbounded" ref="tr"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>


  <xs:element name="thead">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="tr"/>
      </xs:sequence>
      <xs:attributeGroup ref="attrs"/>
      <xs:attributeGroup ref="cellhalign"/>
      <xs:attributeGroup ref="cellvalign"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="tfoot">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="tr"/>
      </xs:sequence>
      <xs:attributeGroup ref="attrs"/>
      <xs:attributeGroup ref="cellhalign"/>
      <xs:attributeGroup ref="cellvalign"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="tbody">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="tr"/>
      </xs:sequence>
      <xs:attributeGroup ref="attrs"/>
      <xs:attributeGroup ref="cellhalign"/>
      <xs:attributeGroup ref="cellvalign"/>
    </xs:complexType>
  </xs:element>



  <xs:element name="tr">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
        <xs:element ref="th"/>
        <xs:element ref="td"/>
      </xs:choice>
      <!-- 
      <xs:attributeGroup ref="attrs"/>
      <xs:attributeGroup ref="cellhalign"/>
      <xs:attributeGroup ref="cellvalign"/>
      -->
    </xs:complexType>
  </xs:element>

  <xs:simpleType name="Scope">
    <xs:annotation>
      <xs:documentation>
      Scope is simpler than headers attribute for common tables
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="row"/>
      <xs:enumeration value="col"/>
      <xs:enumeration value="rowgroup"/>
      <xs:enumeration value="colgroup"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:annotation>
    <xs:documentation>
    th is for headers, td for data and for cells acting as both
    </xs:documentation>
  </xs:annotation>

  <xs:element name="th" type="xs:string">
    <!-- <xs:complexType mixed="true">
      <xs:complexContent>
        <xs:extension base="Flow">
          <xs:attributeGroup ref="attrs"/>
          <xs:attribute name="abbr" type="Text"/>
          <xs:attribute name="axis"/>
          <xs:attribute name="headers" type="xs:IDREFS"/>
          <xs:attribute name="scope" type="Scope"/>
          <xs:attribute name="rowspan" default="1" type="Number"/>
          <xs:attribute name="colspan" default="1" type="Number"/>
          <xs:attributeGroup ref="cellhalign"/>
          <xs:attributeGroup ref="cellvalign"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType> -->
  </xs:element>

  <xs:element name="td" type="xs:string">
    <!-- 
    <xs:complexType mixed="false">
      <xs:complexContent>
        <xs:extension base="xs:string">
          <xs:attributeGroup ref="attrs"/>
          <xs:attribute name="abbr" type="Text"/>
          <xs:attribute name="axis"/>
          <xs:attribute name="headers" type="xs:IDREFS"/>
          <xs:attribute name="scope" type="Scope"/>
          <xs:attribute name="rowspan" default="1" type="Number"/>
          <xs:attribute name="colspan" default="1" type="Number"/>
          <xs:attributeGroup ref="cellhalign"/>
          <xs:attributeGroup ref="cellvalign"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
    -->
  </xs:element>

</xs:schema>
